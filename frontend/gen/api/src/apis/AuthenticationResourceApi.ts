/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import {
  Authentication,
  AuthenticationFromJSON,
  AuthenticationToJSON,
  AuthenticationUserDTO,
  AuthenticationUserDTOFromJSON,
  AuthenticationUserDTOToJSON,
} from "../models";

export interface AuthenticateUserUsingPOSTRequest {
  authenticationUserDTO: AuthenticationUserDTO;
}

/**
 *
 */
export class AuthenticationResourceApi extends runtime.BaseAPI {
  /**
   * authenticateUser
   */
  async authenticateUserUsingPOSTRaw(
    requestParameters: AuthenticateUserUsingPOSTRequest
  ): Promise<runtime.ApiResponse<Authentication>> {
    if (
      requestParameters.authenticationUserDTO === null ||
      requestParameters.authenticationUserDTO === undefined
    ) {
      throw new runtime.RequiredError(
        "authenticationUserDTO",
        "Required parameter requestParameters.authenticationUserDTO was null or undefined when calling authenticateUserUsingPOST."
      );
    }

    const queryParameters: runtime.HTTPQuery = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/authentication`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: AuthenticationUserDTOToJSON(
        requestParameters.authenticationUserDTO
      ),
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      AuthenticationFromJSON(jsonValue)
    );
  }

  /**
   * authenticateUser
   */
  async authenticateUserUsingPOST(
    requestParameters: AuthenticateUserUsingPOSTRequest
  ): Promise<Authentication> {
    const response = await this.authenticateUserUsingPOSTRaw(requestParameters);
    return await response.value();
  }
}
