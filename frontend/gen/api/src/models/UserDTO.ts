/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ImplementationDTO,
    ImplementationDTOFromJSON,
    ImplementationDTOFromJSONTyped,
    ImplementationDTOToJSON,
    ProjectDTO,
    ProjectDTOFromJSON,
    ProjectDTOFromJSONTyped,
    ProjectDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    email?: string;
    /**
     * 
     * @type {number}
     * @memberof UserDTO
     */
    id?: number;
    /**
     * 
     * @type {Array<ImplementationDTO>}
     * @memberof UserDTO
     */
    implementations?: Array<ImplementationDTO>;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    infix?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserDTO
     */
    languages?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    name?: string;
    /**
     * 
     * @type {Array<ProjectDTO>}
     * @memberof UserDTO
     */
    projects?: Array<ProjectDTO>;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    street?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    streetNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof UserDTO
     */
    telephone?: string;
}

export function UserDTOFromJSON(json: any): UserDTO {
    return UserDTOFromJSONTyped(json, false);
}

export function UserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': !exists(json, 'country') ? undefined : json['country'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'implementations': !exists(json, 'implementations') ? undefined : ((json['implementations'] as Array<any>).map(ImplementationDTOFromJSON)),
        'infix': !exists(json, 'infix') ? undefined : json['infix'],
        'languages': !exists(json, 'languages') ? undefined : json['languages'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'projects': !exists(json, 'projects') ? undefined : ((json['projects'] as Array<any>).map(ProjectDTOFromJSON)),
        'street': !exists(json, 'street') ? undefined : json['street'],
        'streetNumber': !exists(json, 'streetNumber') ? undefined : json['streetNumber'],
        'telephone': !exists(json, 'telephone') ? undefined : json['telephone'],
    };
}

export function UserDTOToJSON(value?: UserDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'email': value.email,
        'id': value.id,
        'implementations': value.implementations === undefined ? undefined : ((value.implementations as Array<any>).map(ImplementationDTOToJSON)),
        'infix': value.infix,
        'languages': value.languages,
        'lastName': value.lastName,
        'name': value.name,
        'projects': value.projects === undefined ? undefined : ((value.projects as Array<any>).map(ProjectDTOToJSON)),
        'street': value.street,
        'streetNumber': value.streetNumber,
        'telephone': value.telephone,
    };
}


