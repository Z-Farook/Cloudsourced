/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Implementation,
    ImplementationFromJSON,
    ImplementationFromJSONTyped,
    ImplementationToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * 
 * @export
 * @interface Review
 */
export interface Review {
    /**
     * 
     * @type {boolean}
     * @memberof Review
     */
    approved?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Review
     */
    createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof Review
     */
    id?: number;
    /**
     * 
     * @type {Implementation}
     * @memberof Review
     */
    implementation?: Implementation;
    /**
     * 
     * @type {string}
     * @memberof Review
     */
    message?: string;
    /**
     * 
     * @type {Date}
     * @memberof Review
     */
    updatedAt?: Date;
    /**
     * 
     * @type {User}
     * @memberof Review
     */
    user?: User;
}

export function ReviewFromJSON(json: any): Review {
    return ReviewFromJSONTyped(json, false);
}

export function ReviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Review {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'approved': !exists(json, 'approved') ? undefined : json['approved'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'implementation': !exists(json, 'implementation') ? undefined : ImplementationFromJSON(json['implementation']),
        'message': !exists(json, 'message') ? undefined : json['message'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function ReviewToJSON(value?: Review | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'approved': value.approved,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'id': value.id,
        'implementation': ImplementationToJSON(value.implementation),
        'message': value.message,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'user': UserToJSON(value.user),
    };
}


