/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Implementation,
    ImplementationFromJSON,
    ImplementationFromJSONTyped,
    ImplementationToJSON,
} from './';

/**
 * 
 * @export
 * @interface Feature
 */
export interface Feature {
    /**
     * 
     * @type {string}
     * @memberof Feature
     */
    codeLanguage?: string;
    /**
     * 
     * @type {string}
     * @memberof Feature
     */
    codePreview?: string;
    /**
     * 
     * @type {Date}
     * @memberof Feature
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Feature
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Feature
     */
    id?: number;
    /**
     * 
     * @type {Array<Implementation>}
     * @memberof Feature
     */
    implementations?: Array<Implementation>;
    /**
     * 
     * @type {string}
     * @memberof Feature
     */
    name?: string;
    /**
     * 
     * @type {Date}
     * @memberof Feature
     */
    updatedAt?: Date;
}

export function FeatureFromJSON(json: any): Feature {
    return FeatureFromJSONTyped(json, false);
}

export function FeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): Feature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'codeLanguage': !exists(json, 'codeLanguage') ? undefined : json['codeLanguage'],
        'codePreview': !exists(json, 'codePreview') ? undefined : json['codePreview'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'implementations': !exists(json, 'implementations') ? undefined : ((json['implementations'] as Array<any>).map(ImplementationFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function FeatureToJSON(value?: Feature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'codeLanguage': value.codeLanguage,
        'codePreview': value.codePreview,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'description': value.description,
        'id': value.id,
        'implementations': value.implementations === undefined ? undefined : ((value.implementations as Array<any>).map(ImplementationToJSON)),
        'name': value.name,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}


