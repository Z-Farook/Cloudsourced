/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  ImplementationDTO,
  ImplementationDTOFromJSON,
  ImplementationDTOFromJSONTyped,
  ImplementationDTOToJSON,
} from "./";

/**
 *
 * @export
 * @interface FeatureDTO
 */
export interface FeatureDTO {
  /**
   *
   * @type {string}
   * @memberof FeatureDTO
   */
  codeLanguage?: string;
  /**
   *
   * @type {string}
   * @memberof FeatureDTO
   */
  codePreview?: string;
  /**
   *
   * @type {string}
   * @memberof FeatureDTO
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof FeatureDTO
   */
  id?: number;
  /**
   *
   * @type {Array<ImplementationDTO>}
   * @memberof FeatureDTO
   */
  implementations?: Array<ImplementationDTO>;
  /**
   *
   * @type {string}
   * @memberof FeatureDTO
   */
  name?: string;
  /**
   *
   * @type {number}
   * @memberof FeatureDTO
   */
  points?: number;
}

export function FeatureDTOFromJSON(json: any): FeatureDTO {
  return FeatureDTOFromJSONTyped(json, false);
}

export function FeatureDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FeatureDTO {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    codeLanguage: !exists(json, "codeLanguage")
      ? undefined
      : json["codeLanguage"],
    codePreview: !exists(json, "codePreview") ? undefined : json["codePreview"],
    description: !exists(json, "description") ? undefined : json["description"],
    id: !exists(json, "id") ? undefined : json["id"],
    implementations: !exists(json, "implementations")
      ? undefined
      : (json["implementations"] as Array<any>).map(ImplementationDTOFromJSON),
    name: !exists(json, "name") ? undefined : json["name"],
    points: !exists(json, "points") ? undefined : json["points"],
  };
}

export function FeatureDTOToJSON(value?: FeatureDTO | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    codeLanguage: value.codeLanguage,
    codePreview: value.codePreview,
    description: value.description,
    id: value.id,
    implementations:
      value.implementations === undefined
        ? undefined
        : (value.implementations as Array<any>).map(ImplementationDTOToJSON),
    name: value.name,
    points: value.points,
  };
}
